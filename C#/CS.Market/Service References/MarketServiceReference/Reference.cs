//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CS.Market.MarketServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="MarketServiceLibrary", ConfigurationName="MarketServiceReference.IMarketContract", CallbackContract=typeof(CS.Market.MarketServiceReference.IMarketContractCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IMarketContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="MarketServiceLibrary/IMarketContract/Subscribe", ReplyAction="MarketServiceLibrary/IMarketContract/SubscribeResponse")]
        void Subscribe();
        
        [System.ServiceModel.OperationContractAttribute(Action="MarketServiceLibrary/IMarketContract/Subscribe", ReplyAction="MarketServiceLibrary/IMarketContract/SubscribeResponse")]
        System.Threading.Tasks.Task SubscribeAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsTerminating=true, Action="MarketServiceLibrary/IMarketContract/Unsubscribe", ReplyAction="MarketServiceLibrary/IMarketContract/UnsubscribeResponse")]
        void Unsubscribe();
        
        [System.ServiceModel.OperationContractAttribute(IsTerminating=true, Action="MarketServiceLibrary/IMarketContract/Unsubscribe", ReplyAction="MarketServiceLibrary/IMarketContract/UnsubscribeResponse")]
        System.Threading.Tasks.Task UnsubscribeAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="MarketServiceLibrary/IMarketContract/PublishMarketData")]
        void PublishMarketData(CS.Market.MarketData newData);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="MarketServiceLibrary/IMarketContract/PublishMarketData")]
        System.Threading.Tasks.Task PublishMarketDataAsync(CS.Market.MarketData newData);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMarketContractCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="MarketServiceLibrary/IMarketContract/GetMarketData")]
        void GetMarketData(CS.Market.MarketData newData);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMarketContractChannel : CS.Market.MarketServiceReference.IMarketContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MarketContractClient : System.ServiceModel.DuplexClientBase<CS.Market.MarketServiceReference.IMarketContract>, CS.Market.MarketServiceReference.IMarketContract {
        
        public MarketContractClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public MarketContractClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public MarketContractClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MarketContractClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MarketContractClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Subscribe() {
            base.Channel.Subscribe();
        }
        
        public System.Threading.Tasks.Task SubscribeAsync() {
            return base.Channel.SubscribeAsync();
        }
        
        public void Unsubscribe() {
            base.Channel.Unsubscribe();
        }
        
        public System.Threading.Tasks.Task UnsubscribeAsync() {
            return base.Channel.UnsubscribeAsync();
        }
        
        public void PublishMarketData(CS.Market.MarketData newData) {
            base.Channel.PublishMarketData(newData);
        }
        
        public System.Threading.Tasks.Task PublishMarketDataAsync(CS.Market.MarketData newData) {
            return base.Channel.PublishMarketDataAsync(newData);
        }
    }
}
