//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CS.Pricing.PricerServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OptionData", Namespace="http://schemas.datacontract.org/2004/07/CS.Pricing")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CS.Pricing.PricerServiceReference.OptionResult[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CS.Pricing.PricerServiceReference.OptionResult))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CS.Pricing.Result))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CS.Pricing.PricerServiceReference.OptionContract))]
    public partial class OptionData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object MarketDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CS.Pricing.PricerServiceReference.OptionResult[] OptionResultsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object MarketData {
            get {
                return this.MarketDataField;
            }
            set {
                if ((object.ReferenceEquals(this.MarketDataField, value) != true)) {
                    this.MarketDataField = value;
                    this.RaisePropertyChanged("MarketData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CS.Pricing.PricerServiceReference.OptionResult[] OptionResults {
            get {
                return this.OptionResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.OptionResultsField, value) != true)) {
                    this.OptionResultsField = value;
                    this.RaisePropertyChanged("OptionResults");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OptionResult", Namespace="http://schemas.datacontract.org/2004/07/CS.Pricing")]
    [System.SerializableAttribute()]
    public partial class OptionResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CS.Pricing.Result BaseResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CS.Pricing.PricerServiceReference.OptionContract ContractField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CS.Pricing.Result BaseResult {
            get {
                return this.BaseResultField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseResultField, value) != true)) {
                    this.BaseResultField = value;
                    this.RaisePropertyChanged("BaseResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CS.Pricing.PricerServiceReference.OptionContract Contract {
            get {
                return this.ContractField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractField, value) != true)) {
                    this.ContractField = value;
                    this.RaisePropertyChanged("Contract");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OptionContract", Namespace="http://schemas.datacontract.org/2004/07/CS.Trades.TradeTypes")]
    [System.SerializableAttribute()]
    public partial class OptionContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="PricerServiceLibrary", ConfigurationName="PricerServiceReference.IPricerContract", CallbackContract=typeof(CS.Pricing.PricerServiceReference.IPricerContractCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IPricerContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="PricerServiceLibrary/IPricerContract/Subscribe", ReplyAction="PricerServiceLibrary/IPricerContract/SubscribeResponse")]
        void Subscribe();
        
        [System.ServiceModel.OperationContractAttribute(Action="PricerServiceLibrary/IPricerContract/Subscribe", ReplyAction="PricerServiceLibrary/IPricerContract/SubscribeResponse")]
        System.Threading.Tasks.Task SubscribeAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsTerminating=true, Action="PricerServiceLibrary/IPricerContract/Unsubscribe", ReplyAction="PricerServiceLibrary/IPricerContract/UnsubscribeResponse")]
        void Unsubscribe();
        
        [System.ServiceModel.OperationContractAttribute(IsTerminating=true, Action="PricerServiceLibrary/IPricerContract/Unsubscribe", ReplyAction="PricerServiceLibrary/IPricerContract/UnsubscribeResponse")]
        System.Threading.Tasks.Task UnsubscribeAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="PricerServiceLibrary/IPricerContract/PublishUIData")]
        void PublishUIData(CS.Pricing.PricerServiceReference.OptionData optionData);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="PricerServiceLibrary/IPricerContract/PublishUIData")]
        System.Threading.Tasks.Task PublishUIDataAsync(CS.Pricing.PricerServiceReference.OptionData optionData);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPricerContractCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="PricerServiceLibrary/IPricerContract/GetMarketData")]
        void GetMarketData(CS.Pricing.PricerServiceReference.OptionData newData);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPricerContractChannel : CS.Pricing.PricerServiceReference.IPricerContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PricerContractClient : System.ServiceModel.DuplexClientBase<CS.Pricing.PricerServiceReference.IPricerContract>, CS.Pricing.PricerServiceReference.IPricerContract {
        
        public PricerContractClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public PricerContractClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public PricerContractClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public PricerContractClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public PricerContractClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Subscribe() {
            base.Channel.Subscribe();
        }
        
        public System.Threading.Tasks.Task SubscribeAsync() {
            return base.Channel.SubscribeAsync();
        }
        
        public void Unsubscribe() {
            base.Channel.Unsubscribe();
        }
        
        public System.Threading.Tasks.Task UnsubscribeAsync() {
            return base.Channel.UnsubscribeAsync();
        }
        
        public void PublishUIData(CS.Pricing.PricerServiceReference.OptionData optionData) {
            base.Channel.PublishUIData(optionData);
        }
        
        public System.Threading.Tasks.Task PublishUIDataAsync(CS.Pricing.PricerServiceReference.OptionData optionData) {
            return base.Channel.PublishUIDataAsync(optionData);
        }
    }
}
